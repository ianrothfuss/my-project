{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    },
    {
      "destination": "/ie-incompatible.html",
      "has": [
        {
          "type": "header",
          "key": "user-agent",
          "value": "(.*Trident.*)"
        }
      ],
      "source": "/:path((?!ie-incompatible.html$).*)",
      "statusCode": 307,
      "regex": "^(?!/_next)(?:/((?!ie-incompatible.html$).*))(?:/)?$"
    }
  ],
  "headers": [
    {
      "source": "/:path*",
      "headers": [
        {
          "key": "Accept-CH",
          "value": "Sec-CH-Prefers-Color-Scheme"
        },
        {
          "key": "Vary",
          "value": "Sec-CH-Prefers-Color-Scheme"
        },
        {
          "key": "Critical-CH",
          "value": "Sec-CH-Prefers-Color-Scheme"
        },
        {
          "key": "X-Powered-By",
          "value": "Next.js, Payload"
        }
      ],
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/admin/[[...segments]]",
      "regex": "^/admin(?:/(.+?))?(?:/)?$",
      "routeKeys": {
        "nxtPsegments": "nxtPsegments"
      },
      "namedRegex": "^/admin(?:/(?<nxtPsegments>.+?))?(?:/)?$"
    },
    {
      "page": "/api/[...slug]",
      "regex": "^/api/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/api/(?<nxtPslug>.+?)(?:/)?$"
    },
    {
      "page": "/orders/[id]",
      "regex": "^/orders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/orders/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/products/[slug]",
      "regex": "^/products/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/products/(?<nxtPslug>[^/]+?)(?:/)?$"
    },
    {
      "page": "/[slug]",
      "regex": "^/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/(?<nxtPslug>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/account",
      "regex": "^/account(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/account(?:/)?$"
    },
    {
      "page": "/account/addresses",
      "regex": "^/account/addresses(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/account/addresses(?:/)?$"
    },
    {
      "page": "/checkout",
      "regex": "^/checkout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/checkout(?:/)?$"
    },
    {
      "page": "/checkout/confirm-order",
      "regex": "^/checkout/confirm\\-order(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/checkout/confirm\\-order(?:/)?$"
    },
    {
      "page": "/create-account",
      "regex": "^/create\\-account(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/create\\-account(?:/)?$"
    },
    {
      "page": "/find-order",
      "regex": "^/find\\-order(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/find\\-order(?:/)?$"
    },
    {
      "page": "/forgot-password",
      "regex": "^/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/forgot\\-password(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/logout",
      "regex": "^/logout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/logout(?:/)?$"
    },
    {
      "page": "/next/exit-preview",
      "regex": "^/next/exit\\-preview(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/next/exit\\-preview(?:/)?$"
    },
    {
      "page": "/next/preview",
      "regex": "^/next/preview(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/next/preview(?:/)?$"
    },
    {
      "page": "/next/seed",
      "regex": "^/next/seed(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/next/seed(?:/)?$"
    },
    {
      "page": "/orders",
      "regex": "^/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/orders(?:/)?$"
    },
    {
      "page": "/shop",
      "regex": "^/shop(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/shop(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}