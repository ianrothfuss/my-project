"use strict";exports.id=3449,exports.ids=[3449],exports.modules={33449:(a,b,c)=>{c.d(b,{GetRoleCredentialsCommand:()=>M,SSOClient:()=>a6});var d=c(33319),e=c(83646),f=c(60781);let g={UseFIPS:{type:"builtInParams",name:"useFipsEndpoint"},Endpoint:{type:"builtInParams",name:"endpoint"},Region:{type:"builtInParams",name:"region"},UseDualStack:{type:"builtInParams",name:"useDualstackEndpoint"}};var h=c(99381),i=c(28492);class j extends i.T{constructor(a){super(a),Object.setPrototypeOf(this,j.prototype)}}class k extends j{name="InvalidRequestException";$fault="client";constructor(a){super({name:"InvalidRequestException",$fault:"client",...a}),Object.setPrototypeOf(this,k.prototype)}}class l extends j{name="ResourceNotFoundException";$fault="client";constructor(a){super({name:"ResourceNotFoundException",$fault:"client",...a}),Object.setPrototypeOf(this,l.prototype)}}class m extends j{name="TooManyRequestsException";$fault="client";constructor(a){super({name:"TooManyRequestsException",$fault:"client",...a}),Object.setPrototypeOf(this,m.prototype)}}class n extends j{name="UnauthorizedException";$fault="client";constructor(a){super({name:"UnauthorizedException",$fault:"client",...a}),Object.setPrototypeOf(this,n.prototype)}}let o=a=>({...a,...a.accessToken&&{accessToken:h.$}}),p=a=>({...a,...a.roleCredentials&&{roleCredentials:(a=>({...a,...a.secretAccessKey&&{secretAccessKey:h.$},...a.sessionToken&&{sessionToken:h.$}}))(a.roleCredentials)}});var q=c(40705),r=c(79464),s=c(67498),t=c(60592),u=c(51429),v=c(93968),w=c(98327);let x=async(a,b)=>{let c,d=(0,r.l)(a,b),e=(0,s.Tj)({},t.e,{[L]:a[H]});d.bp("/federation/credentials");let f=(0,s.Tj)({[K]:[,(0,u.Y0)(a[J],"roleName")],[I]:[,(0,u.Y0)(a[G],"accountId")]});return d.m("GET").h(e).q(f).b(c),d.build()},y=async(a,b)=>{if(200!==a.statusCode&&a.statusCode>=300)return z(a,b);let c=(0,s.Tj)({$metadata:F(a)}),d=(0,u.Y0)((0,u.Xk)(await (0,q.Y2)(a.body,b)),"body");return Object.assign(c,(0,s.s)(d,{roleCredentials:v.S})),c},z=async(a,b)=>{let c={...a,body:await (0,q.CG)(a.body,b)},d=(0,q.cJ)(a,c.body);switch(d){case"InvalidRequestException":case"com.amazonaws.sso#InvalidRequestException":throw await B(c,b);case"ResourceNotFoundException":case"com.amazonaws.sso#ResourceNotFoundException":throw await C(c,b);case"TooManyRequestsException":case"com.amazonaws.sso#TooManyRequestsException":throw await D(c,b);case"UnauthorizedException":case"com.amazonaws.sso#UnauthorizedException":throw await E(c,b);default:return A({output:a,parsedBody:c.body,errorCode:d})}},A=(0,w.j)(j),B=async(a,b)=>{let c=(0,s.Tj)({}),d=a.body;Object.assign(c,(0,s.s)(d,{message:u.lK}));let e=new k({$metadata:F(a),...c});return(0,i.M)(e,a.body)},C=async(a,b)=>{let c=(0,s.Tj)({}),d=a.body;Object.assign(c,(0,s.s)(d,{message:u.lK}));let e=new l({$metadata:F(a),...c});return(0,i.M)(e,a.body)},D=async(a,b)=>{let c=(0,s.Tj)({}),d=a.body;Object.assign(c,(0,s.s)(d,{message:u.lK}));let e=new m({$metadata:F(a),...c});return(0,i.M)(e,a.body)},E=async(a,b)=>{let c=(0,s.Tj)({}),d=a.body;Object.assign(c,(0,s.s)(d,{message:u.lK}));let e=new n({$metadata:F(a),...c});return(0,i.M)(e,a.body)},F=a=>({httpStatusCode:a.statusCode,requestId:a.headers["x-amzn-requestid"]??a.headers["x-amzn-request-id"]??a.headers["x-amz-request-id"],extendedRequestId:a.headers["x-amz-id-2"],cfId:a.headers["x-amz-cf-id"]}),G="accountId",H="accessToken",I="account_id",J="roleName",K="role_name",L="x-amz-sso_bearer_token";class M extends f.u.classBuilder().ep(g).m(function(a,b,c,f){return[(0,e.TM)(c,this.serialize,this.deserialize),(0,d.r)(c,a.getEndpointParameterInstructions())]}).s("SWBPortalService","GetRoleCredentials",{}).n("SSOClient","GetRoleCredentialsCommand").f(o,p).ser(x).de(y).build(){}var N=c(514),O=c(67110),P=c(54545),Q=c(56708),R=c(69618),S=c(1207),T=c(79808),U=c(66337),V=c(4745),W=c(94514),X=c(94130),Y=c(3640),Z=c(76282),$=c(56465),_=c(58179),aa=c(23301),ab=c(65960);let ac=async(a,b,c)=>({operation:(0,aa.u)(b).operation,region:await (0,ab.t)(a.region)()||(()=>{throw Error("expected `region` to be configured for `aws.auth#sigv4`")})()}),ad=a=>{let b=[];switch(a.operation){case"GetRoleCredentials":case"ListAccountRoles":case"ListAccounts":case"Logout":b.push({schemeId:"smithy.api#noAuth"});break;default:b.push({schemeId:"aws.auth#sigv4",signingProperties:{name:"awsssoportal",region:a.region},propertiesExtractor:(a,b)=>({signingProperties:{config:a,context:b}})})}return b},ae={rE:"3.911.0"};var af=c(71500),ag=c(45579),ah=c(27033),ai=c(60817),aj=c(69494),ak=c(59862),al=c(93668),am=c(80850),an=c(67821),ao=c(94585),ap=c(14187),aq=c(13188),ar=c(78476),as=c(62763),at=c(71487),au=c(26666),av=c(16152),aw=c(77915),ax=c(23430),ay=c(69480),az=c(28506),aA=c(18413),aB=c(87225),aC=c(36004),aD=c(65352);let aE="required",aF="argv",aG="isSet",aH="booleanEquals",aI="error",aJ="endpoint",aK="tree",aL="PartitionResult",aM="getAttr",aN={[aE]:!1,type:"String"},aO={[aE]:!0,default:!1,type:"Boolean"},aP={ref:"Endpoint"},aQ={fn:aH,[aF]:[{ref:"UseFIPS"},!0]},aR={fn:aH,[aF]:[{ref:"UseDualStack"},!0]},aS={},aT={fn:aM,[aF]:[{ref:aL},"supportsFIPS"]},aU={ref:aL},aV={fn:aH,[aF]:[!0,{fn:aM,[aF]:[aU,"supportsDualStack"]}]},aW=[aQ],aX=[aR],aY=[{ref:"Region"}],aZ={version:"1.0",parameters:{Region:aN,UseDualStack:aO,UseFIPS:aO,Endpoint:aN},rules:[{conditions:[{fn:aG,[aF]:[aP]}],rules:[{conditions:aW,error:"Invalid Configuration: FIPS and custom endpoint are not supported",type:aI},{conditions:aX,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",type:aI},{endpoint:{url:aP,properties:aS,headers:aS},type:aJ}],type:aK},{conditions:[{fn:aG,[aF]:aY}],rules:[{conditions:[{fn:"aws.partition",[aF]:aY,assign:aL}],rules:[{conditions:[aQ,aR],rules:[{conditions:[{fn:aH,[aF]:[!0,aT]},aV],rules:[{endpoint:{url:"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:aS,headers:aS},type:aJ}],type:aK},{error:"FIPS and DualStack are enabled, but this partition does not support one or both",type:aI}],type:aK},{conditions:aW,rules:[{conditions:[{fn:aH,[aF]:[aT,!0]}],rules:[{conditions:[{fn:"stringEquals",[aF]:[{fn:aM,[aF]:[aU,"name"]},"aws-us-gov"]}],endpoint:{url:"https://portal.sso.{Region}.amazonaws.com",properties:aS,headers:aS},type:aJ},{endpoint:{url:"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}",properties:aS,headers:aS},type:aJ}],type:aK},{error:"FIPS is enabled but this partition does not support FIPS",type:aI}],type:aK},{conditions:aX,rules:[{conditions:[aV],rules:[{endpoint:{url:"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:aS,headers:aS},type:aJ}],type:aK},{error:"DualStack is enabled but this partition does not support DualStack",type:aI}],type:aK},{endpoint:{url:"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}",properties:aS,headers:aS},type:aJ}],type:aK}],type:aK},{error:"Invalid Configuration: Missing Region",type:aI}]},a$=new aB.k({size:50,params:["Endpoint","Region","UseDualStack","UseFIPS"]}),a_=(a,b={})=>a$.get(a,()=>(0,aC.s)(aZ,{endpointParams:a,logger:b.logger}));aD.m.aws=aA.awsEndpointFunctions;var a0=c(41490),a1=c(76022),a2=c(64275),a3=c(98695),a4=c(71e3),a5=c(93820);class a6 extends $.K{config;constructor(...[a]){let b=(a=>{(0,a2.I)(process.version);let b=(0,a1.I)(a),c=()=>b().then(a0.l),d=(a=>({apiVersion:"2019-06-10",base64Decoder:a?.base64Decoder??aw.E,base64Encoder:a?.base64Encoder??ax.n,disableHostPrefix:a?.disableHostPrefix??!1,endpointProvider:a?.endpointProvider??a_,extensions:a?.extensions??[],httpAuthSchemeProvider:a?.httpAuthSchemeProvider??ad,httpAuthSchemes:a?.httpAuthSchemes??[{schemeId:"aws.auth#sigv4",identityProvider:a=>a.getIdentityProvider("aws.auth#sigv4"),signer:new as.f2},{schemeId:"smithy.api#noAuth",identityProvider:a=>a.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new at.m}],logger:a?.logger??new au.N,serviceId:a?.serviceId??"SSO",urlParser:a?.urlParser??av.parseUrl,utf8Decoder:a?.utf8Decoder??ay.a,utf8Encoder:a?.utf8Encoder??az.P}))(a);(0,af.I)(process.version);let e={profile:a?.profile,logger:d.logger};return{...d,...a,runtime:"node",defaultsMode:b,authSchemePreference:a?.authSchemePreference??(0,an.Z)(ag.$,e),bodyLengthChecker:a?.bodyLengthChecker??aq.n,defaultUserAgentProvider:a?.defaultUserAgentProvider??(0,ah.pf)({serviceId:d.serviceId,clientVersion:ae.rE}),maxAttempts:a?.maxAttempts??(0,an.Z)(Y.qs,a),region:a?.region??(0,an.Z)(aj.GG,{...aj.zH,...e}),requestHandler:ao.$.create(a?.requestHandler??c),retryMode:a?.retryMode??(0,an.Z)({...Y.kN,default:async()=>(await c()).retryMode||ar.L0},a),sha256:a?.sha256??am.V.bind(null,"sha256"),streamCollector:a?.streamCollector??ap.k,useDualstackEndpoint:a?.useDualstackEndpoint??(0,an.Z)(ak.e$,e),useFipsEndpoint:a?.useFipsEndpoint??(0,an.Z)(al.Ko,e),userAgentAppId:a?.userAgentAppId??(0,an.Z)(ai.hV,e)}})(a||{});super(b),this.initConfig=b;let c=(a=>Object.assign(a,{useDualstackEndpoint:a.useDualstackEndpoint??!1,useFipsEndpoint:a.useFipsEndpoint??!1,defaultSigningName:"awsssoportal"}))(b),d=(0,Q.D)(c),e=(0,Y.$z)(d),f=(0,S.T)(e),g=(0,N.OV)(f),h=((a,b)=>{let c=Object.assign((0,a3.R)(a),(0,a5.xA)(a),(0,a4.e)(a),(a=>{let b=a.httpAuthSchemes,c=a.httpAuthSchemeProvider,d=a.credentials;return{setHttpAuthScheme(a){let c=b.findIndex(b=>b.schemeId===a.schemeId);-1===c?b.push(a):b.splice(c,1,a)},httpAuthSchemes:()=>b,setHttpAuthSchemeProvider(a){c=a},httpAuthSchemeProvider:()=>c,setCredentials(a){d=a},credentials:()=>d}})(a));return b.forEach(a=>a.configure(c)),Object.assign(a,(0,a3.$)(c),(0,a5.uv)(c),(0,a4.j)(c),(a=>({httpAuthSchemes:a.httpAuthSchemes(),httpAuthSchemeProvider:a.httpAuthSchemeProvider(),credentials:a.credentials()}))(c))})((a=>Object.assign((0,_.h)(a),{authSchemePreference:(0,ab.t)(a.authSchemePreference??[])}))((0,X.C)(g)),a?.extensions||[]);this.config=h,this.middlewareStack.use((0,R.sM)(this.config)),this.middlewareStack.use((0,Z.ey)(this.config)),this.middlewareStack.use((0,W.vK)(this.config)),this.middlewareStack.use((0,N.TC)(this.config)),this.middlewareStack.use((0,O.Y7)(this.config)),this.middlewareStack.use((0,P.n)(this.config)),this.middlewareStack.use((0,T.w)(this.config,{httpAuthSchemeParametersProvider:ac,identityProviderConfigProvider:async a=>new U.h({"aws.auth#sigv4":a.credentials})})),this.middlewareStack.use((0,V.l)(this.config))}destroy(){super.destroy()}}}};